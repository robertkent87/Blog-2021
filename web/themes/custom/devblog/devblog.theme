<?php

/**
 * @file
 * Functions to support theming in the devblog theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function devblog_preprocess_html(array &$variables)
{
    /* Add class to html tag */
    //$variables['html_attributes']->addClass('no-js');

    // Don't display the site name twice on the front page (and potentially others)
    /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function devblog_page_attachments_alter(array &$page)
{
    // Tell IE to use latest rendering engine (not to use compatibility mode).
    /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function devblog_preprocess_page(array &$variables)
{
    $sidebar_config = \Drupal\config_pages\Entity\ConfigPages::config('sidebar_settings');

    if ($sidebar_config->hasField('field_image') && !$sidebar_config->field_image->isEmpty()) {
        $image = $sidebar_config->field_image->entity;
        if ($image->hasField('field_media_image') && !$image->field_media_image->isEmpty()) {
            $variables['sidebar_image'] = file_create_url($image->field_media_image->entity->uri->value);
        }
    }

    if ($sidebar_config->hasField('field_description') && !$sidebar_config->field_description->isEmpty()) {
        $variables['sidebar_description'] = $sidebar_config->get('field_description')->value;
    }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function devblog_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function devblog_theme_suggestions_node_alter(array &$suggestions, array $variables)
{
    /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function devblog_preprocess_block(array &$variables)
{
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function devblog_theme_suggestions_field_alter(array &$suggestions, array $variables)
{
    /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function devblog_theme_suggestions_fieldset_alter(array &$suggestions, array $variables)
{
    /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function devblog_preprocess_node(array &$variables)
{
    // Default to turning off byline/submitted.
    //$variables['display_submitted'] = FALSE;

    //Get the created time of the current node
    $node = \Drupal::request()->attributes->get('node');
    $created_time = $node->getCreatedTime();

    // Generate Next & Previous links
    $previous = generatePrevious($created_time);
    $next = generateNext($created_time);

    if ($previous) {
        $variables['prev_link'] = $previous;
    }

    if ($next) {
        $variables['next_link'] = $next;
    }
}

function generatePrevious($created_time)
{
    return generateNextPrevious('prev', $created_time);
}

function generateNext($created_time)
{
    return generateNextPrevious('next', $created_time);
}

function generateNextPrevious($direction = 'next', $created_time)
{
    if ($direction === 'next') {
        $comparison_opperator = '>';
        $sort = 'ASC';
        // $display_text = t('Next Article');
    } elseif ($direction === 'prev') {
        $comparison_opperator = '<';
        $sort = 'DESC';
        // $display_text = t('Previous Article');
    }

    //Lookup 1 node younger (or older) than the current node
    $query = \Drupal::entityQuery('node');
    $next = $query->condition('created', $created_time, $comparison_opperator)
        ->condition('type', 'article')
        ->sort('created', $sort)
        ->range(0, 1)
        ->execute();

    //If this is not the youngest (or oldest) node
    if (!empty($next) && is_array($next)) {
        $next = array_values($next);
        $next = $next[0];

        //Find the alias of the next node
        $next_url = \Drupal::service('path.alias_manager')->getAliasByPath('/node/' . $next);

        //Build the URL of the next node
        $next_url = \Drupal\Core\Url::fromUri('base:/' . $next_url);

        //Build the HTML for the next node
        return $next_url->toString();
    }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function devblog_theme_suggestions_views_view_alter(array &$suggestions, array $variables)
{
}

/**
 * Implements hook_preprocess_form().
 */
function devblog_preprocess_form(array &$variables)
{
    //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function devblog_preprocess_select(array &$variables)
{
    //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function devblog_preprocess_field(array &$variables, $hook)
{
    /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function devblog_preprocess_details(array &$variables)
{
    /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function devblog_theme_suggestions_details_alter(array &$suggestions, array $variables)
{
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function devblog_preprocess_menu_local_task(array &$variables)
{
    //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}
